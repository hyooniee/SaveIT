<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.saveit.mapper.ExpenseMapper">

<select id="totalExpenseMonth" resultType="int">
  SELECT COALESCE(SUM(exp.amount), 0)
  FROM tb_expense exp
  WHERE exp.user_id = #{userId}
    AND exp.expense_date >= #{startDate}
    AND exp.expense_date &lt; #{endDate}
</select>

<select id="getExpenseMonth" resultType="com.saveit.vo.Expense">
  SELECT 
    exp.user_id, cate.kind, cate.category, exp.expense_date, exp.amount 
  FROM 
    tb_expense exp
    JOIN tb_category cate ON exp.category_id = cate.category_id
  WHERE 
    cate.kind = 1
    AND exp.user_id = #{userId}
    AND exp.expense_date >= #{startDate}
    AND exp.expense_date &lt; #{endDate}
</select>

<select id="getExpenseWeek" resultType="com.saveit.vo.Expense">
	SELECT
		exp.user_id, cate.kind, cate.category, exp.expense_date as expenseDate, exp.amount
	FROM
		tb_expense exp
		JOIN tb_category cate ON exp.category_id = cate.category_id
	WHERE
		user_id = #{userId}
      	AND exp.expense_date BETWEEN #{startDate} AND #{endDate}
</select>

<insert id="inputExpense">
	INSERT INTO tb_expense (user_id, category_id, expense_date, amount)
	VALUES (#{userId}, #{categoryId}, #{expenseDate}, #{amount})
</insert>

<select id="getTop5CategoryExpense" resultType="map">
	
  SELECT 
    cate.category AS category,
    SUM(exp.amount) AS total,
    ROUND(SUM(exp.amount) / total.total_sum * 100, 1) AS ratio
  FROM 
    tb_expense exp
    JOIN tb_category cate ON exp.category_id = cate.category_id
    JOIN (
      SELECT SUM(amount) AS total_sum
      FROM tb_expense
      WHERE user_id = #{userId}
        AND expense_date >= #{startDate}
        AND expense_date &lt; #{endDate}
        AND category_id IN (
          SELECT category_id FROM tb_category WHERE kind = 1
        )
    ) total
  WHERE 
    exp.user_id = #{userId}
    AND exp.expense_date >= #{startDate}
    AND exp.expense_date &lt; #{endDate}
    AND cate.kind = 1
  GROUP BY cate.category, total.total_sum
  ORDER BY total DESC
  LIMIT 5
</select>



</mapper>